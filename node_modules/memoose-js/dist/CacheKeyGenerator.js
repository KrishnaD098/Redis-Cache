"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheKeyGenerator = void 0;
const mongoose_1 = require("mongoose");
const object_hash_1 = __importDefault(require("object-hash"));
var ObjectId = mongoose_1.Schema.Types.ObjectId;
const lodash_1 = __importDefault(require("lodash"));
class CacheKeyGenerator {
    constructor(function_name, should_sort_args) {
        this.function_name = function_name;
        this.should_sort_args = should_sort_args;
    }
    for(...args) {
        let cache_key;
        let flattened_String = this.flattenObject([...args]);
        if (this.should_sort_args)
            flattened_String = flattened_String.sort();
        // if ([""].includes(this.function_name))
        //     console.log(this.function_name, "cache_key_gen", flattened_String);
        cache_key = (0, object_hash_1.default)([this.function_name, ...flattened_String], {
            ignoreUnknown: true,
            algorithm: 'md5'
        });
        return cache_key;
    }
    flattenObject(o) {
        if (o === undefined)
            return "__undefined__";
        if (o === null)
            return "__null__";
        if (o instanceof ObjectId)
            return String(o);
        if (o._id)
            return String(o._id);
        if (o.id)
            return String(o.id);
        if (o instanceof Date)
            return o.getTime();
        if (lodash_1.default.isString(o) || lodash_1.default.isNumber(o) || lodash_1.default.isBoolean(o)) {
            return String(o);
        }
        if (lodash_1.default.isArray(o)) {
            return o.map(a => this.flattenObject(a));
        }
        if (lodash_1.default.isPlainObject(o)) {
            return Object.values(o).map(a => this.flattenObject(a)); //might lead to dups
        }
        return String(o);
    }
}
exports.CacheKeyGenerator = CacheKeyGenerator;
